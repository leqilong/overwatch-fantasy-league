{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Leqi\\\\Documents\\\\overwatch-fantasy-league\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport predictions from '../apis/predictions';\nimport history from '../history';\nexport const fetchMatches = () => async (dispatch, getState) => {\n  const response = await predictions.get('/');\n  dispatch({\n    type: 'FETCH_MATCHES',\n    payload: response.data\n  });\n};\nexport const fetchMatch = id => async dispatch => {\n  console.log(id);\n  const response = await predictions.get(\"/matches/\".concat(id));\n  dispatch({\n    type: 'FETCH_STREAM',\n    payload: response.data\n  });\n};\nexport const createPrediction = formValues => async dispatch => {\n  //hard code user id for now until authentication is implemented\n  console.log(\"createPrediction action creator is called\");\n  const userId = 1;\n  const response = await predictions.post('/predictions', _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: 'CREATE_PREDICTION',\n    payload: response.data\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["C:\\Users\\Leqi\\Documents\\overwatch-fantasy-league\\frontend\\src\\actions\\index.js"],"names":["predictions","history","fetchMatches","dispatch","getState","response","get","type","payload","data","fetchMatch","id","console","log","createPrediction","formValues","userId","post","push"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,QAAMC,QAAQ,GAAG,MAAML,WAAW,CAACM,GAAZ,CAAgB,GAAhB,CAAvB;AACAH,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA1C,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,UAAU,GAAGC,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAChDS,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,QAAMN,QAAQ,GAAG,MAAML,WAAW,CAACM,GAAZ,oBAA4BK,EAA5B,EAAvB;AACAR,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,gBAAgB,GAAGC,UAAU,IAAI,MAAMZ,QAAN,IAAkB;AAC9D;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,QAAMG,MAAM,GAAG,CAAf;AACA,QAAMX,QAAQ,GAAG,MAAML,WAAW,CAACiB,IAAZ,CAAiB,cAAjB,oBAAqCF,UAArC;AAAiDC,IAAAA;AAAjD,KAAvB;AACAb,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE,mBAAP;AAA4BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA9C,GAAD,CAAR;AACAR,EAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,CAPM","sourcesContent":["import predictions from '../apis/predictions';\r\nimport history from '../history';\r\n\r\nexport const fetchMatches = () => async (dispatch, getState) => {\r\n  const response = await predictions.get('/');\r\n  dispatch({type: 'FETCH_MATCHES', payload: response.data});\r\n};\r\n\r\nexport const fetchMatch = id => async dispatch => {\r\n  console.log(id)\r\n  const response = await predictions.get(`/matches/${id}`);\r\n  dispatch({type: 'FETCH_STREAM', payload: response.data});\r\n};\r\n\r\nexport const createPrediction = formValues => async dispatch => {\r\n  //hard code user id for now until authentication is implemented\r\n  console.log(\"createPrediction action creator is called\")\r\n  const userId = 1;\r\n  const response = await predictions.post('/predictions', {...formValues, userId});\r\n  dispatch({type: 'CREATE_PREDICTION', payload: response.data});\r\n  history.push('/');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}