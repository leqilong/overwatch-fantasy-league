{"ast":null,"code":"import predictions from '../apis/predictions';\nimport history from '../history';\nexport const fetchMatches = () => async (dispatch, getState) => {\n  const response = await predictions.get('/');\n  dispatch({\n    type: 'FETCH_MATCHES',\n    payload: response.data\n  });\n};\nexport const createPrediction = formValues => async dispatch => {\n  //hard code user id for now until authentication is implemented\n  const userId = 1;\n  const response = await predictions.post('/predictions', {\n    formValues,\n    userId\n  });\n  dispatch({\n    type: 'CREATE_PREDICTION',\n    payload: response.data\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["/Users/leqilong/Desktop/projects/overwatch-fantasy-league/frontend/src/actions/index.js"],"names":["predictions","history","fetchMatches","dispatch","getState","response","get","type","payload","data","createPrediction","formValues","userId","post","push"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,QAAMC,QAAQ,GAAG,MAAML,WAAW,CAACM,GAAZ,CAAgB,GAAhB,CAAvB;AACAH,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA1C,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,UAAU,IAAI,MAAMR,QAAN,IAAkB;AAC9D;AACA,QAAMS,MAAM,GAAG,CAAf;AACA,QAAMP,QAAQ,GAAG,MAAML,WAAW,CAACa,IAAZ,CAAiB,cAAjB,EAAiC;AAACF,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAjC,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAE,mBAAP;AAA4BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA9C,GAAD,CAAR;AACAR,EAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,CANM","sourcesContent":["import predictions from '../apis/predictions';\nimport history from '../history';\n\nexport const fetchMatches = () => async (dispatch, getState) => {\n  const response = await predictions.get('/');\n  dispatch({type: 'FETCH_MATCHES', payload: response.data});\n};\n\nexport const createPrediction = formValues => async dispatch => {\n  //hard code user id for now until authentication is implemented\n  const userId = 1;\n  const response = await predictions.post('/predictions', {formValues, userId});\n  dispatch({type: 'CREATE_PREDICTION', payload: response.data});\n  history.push('/');\n}\n"]},"metadata":{},"sourceType":"module"}