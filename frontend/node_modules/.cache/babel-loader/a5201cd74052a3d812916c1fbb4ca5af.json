{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leqi\\\\Documents\\\\overwatch-fantasy-league\\\\frontend\\\\src\\\\components\\\\Predictions\\\\PredictionForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { SelectField } from 'redux-form-material-ui';\nimport MenuItem from 'material-ui/MenuItem';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nclass PredictionForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n\n    this.renderTeamLogo = index => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.matchData[\"competitors\"][index][\"icon\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.matchData[\"competitors\"][index][\"name\"])));\n    };\n\n    this.renderTeamValues = index => {\n      return this.props.matchData[\"competitors\"][index][\"name\"];\n    };\n\n    this.renderRadioGroup = props => {\n      return React.createElement(RadioButtonGroup, Object.assign({}, input, rest, {\n        valueSelected: input.value,\n        onChange: (event, value) => input.onChange(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    };\n\n    this.renderMatchScoreDropdown = (index, props) => {\n      return React.createElement(Field, {\n        name: this.renderTeamValues(index),\n        component: props => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(SelectField, Object.assign({\n          value: props.input.value,\n          floatingLabelText: this.renderTeamValues(index),\n          errorText: props.touched && props.error\n        }, props, {\n          onChange: (event, index, value) => console.log(props.input.value),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), this.renderMenuItem()), React.createElement(\"button\", {\n          className: \"ui button primary\",\n          onClick: () => this.props.resetSection(this.renderTeamValues(index)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Reset\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    };\n\n    this.renderMenuItem = () => {\n      let menu = [];\n      const scores = [\"0\", \"1\", \"2\", \"3\", \"4\"];\n      scores.map(score => {\n        menu.push(React.createElement(MenuItem, {\n          key: score,\n          value: score,\n          primaryText: score,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      });\n      return menu;\n    };\n  }\n\n  getChildContext() {\n    return {\n      muiTheme: getMuiTheme()\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"seriesWinner\",\n      component: this.renderRadioGroup(this.props),\n      label: \"Series Winner:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(RadioButton, {\n      value: this.renderTeamValues(0),\n      label: this.renderTeamLogo(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(RadioButton, {\n      value: this.renderTeamValues(1),\n      label: this.renderTeamLogo(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), this.renderMatchScoreDropdown(0, this.props), this.renderMatchScoreDropdown(1, this.props), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.seriesWinner) {\n    errors.seriesWinner = 'You must select a series winner';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'predictionForm',\n  validate\n})(PredictionForm);","map":{"version":3,"sources":["C:\\Users\\Leqi\\Documents\\overwatch-fantasy-league\\frontend\\src\\components\\Predictions\\PredictionForm.js"],"names":["React","Field","reduxForm","SelectField","MenuItem","RadioButton","RadioButtonGroup","getMuiTheme","PredictionForm","Component","onSubmit","formValues","props","renderTeamLogo","index","matchData","renderTeamValues","renderRadioGroup","input","rest","value","event","onChange","renderMatchScoreDropdown","touched","error","console","log","renderMenuItem","resetSection","menu","scores","map","score","push","getChildContext","muiTheme","renderError","render","handleSubmit","validate","errors","seriesWinner","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {SelectField} from 'redux-form-material-ui';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\r\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\r\n\r\nclass PredictionForm extends React.Component{\r\n  onSubmit = (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  childContextTypes:{\r\n    muiTheme: React.PropTypes.object.isRequired,\r\n  }\r\n\r\n  getChildContext() {\r\n    return {muiTheme: getMuiTheme()};\r\n  }\r\n\r\n  renderError({error, touched}){\r\n    if(touched && error){\r\n      return(\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderTeamLogo = index => {\r\n    return (\r\n      <div>\r\n        <img src={this.props.matchData[\"competitors\"][index][\"icon\"]} />\r\n        <div>\r\n          <p>{this.props.matchData[\"competitors\"][index][\"name\"]}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderTeamValues = index => {\r\n    return this.props.matchData[\"competitors\"][index][\"name\"];\r\n  }\r\n\r\n  renderRadioGroup = (props) => {\r\n    return (\r\n      <RadioButtonGroup {...input} {...rest}\r\n        valueSelected={input.value}\r\n        onChange={(event, value) => input.onChange(value)}/>\r\n    )\r\n  }\r\n\r\n  renderMatchScoreDropdown = (index, props) => {\r\n    return(\r\n      <Field name={this.renderTeamValues(index)} component={props =>\r\n        <div>\r\n          <SelectField\r\n            value={props.input.value}\r\n            floatingLabelText = {this.renderTeamValues(index)}\r\n            errorText = {props.touched && props.error}\r\n            {...props}\r\n            onChange = {(event, index, value) => console.log(props.input.value)}\r\n          >\r\n            {this.renderMenuItem()}\r\n          </SelectField>\r\n          <button className=\"ui button primary\" onClick={()=> this.props.resetSection(this.renderTeamValues(index))}>Reset</button>\r\n        </div>\r\n      }/>\r\n    )\r\n  }\r\n\r\n  renderMenuItem = () => {\r\n    let menu = [];\r\n    const scores = [\"0\", \"1\", \"2\", \"3\", \"4\"];\r\n    scores.map(score => {\r\n      menu.push(<MenuItem key={score} value={score} primaryText={score} />)\r\n    });\r\n    return menu;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n        <div>\r\n          <Field name=\"seriesWinner\" component={this.renderRadioGroup(this.props)} label=\"Series Winner:\">\r\n            <RadioButton value={this.renderTeamValues(0)} label={this.renderTeamLogo(0)} />\r\n            <RadioButton value={this.renderTeamValues(1)} label={this.renderTeamLogo(1)} />\r\n          </Field>\r\n        </div>\r\n          {this.renderMatchScoreDropdown(0, this.props)}\r\n          {this.renderMatchScoreDropdown(1, this.props)}\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    )\r\n  };\r\n};\r\n\r\n\r\nconst validate = (formValues)=>{\r\n  const errors = {};\r\n  if (!formValues.seriesWinner){\r\n    errors.seriesWinner = 'You must select a series winner';\r\n  }\r\n\r\n  return errors;\r\n\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'predictionForm',\r\n  validate\r\n})(PredictionForm);\r\n"]},"metadata":{},"sourceType":"module"}