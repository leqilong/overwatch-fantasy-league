{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leqi\\\\Documents\\\\overwatch-fantasy-league\\\\frontend\\\\src\\\\components\\\\Predictions\\\\MatchesList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchMatches } from '../../actions';\nconst isPredicted = false;\n\nclass MatchesList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buttonText = () => {\n      return isPredicted === true ? 'Edit Prediction' : 'Make Prediction';\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMatches();\n  }\n\n  renderAdmin(match) {\n    return React.createElement(Link, {\n      to: \"/matches/predict/\".concat(match.id),\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.buttonText());\n  }\n\n  renderMatchesList() {\n    console.log(this.props.matches);\n    return this.props.matches.map(match => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: match.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.renderAdmin(match), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, match['competitors'][0]['name'])), React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, match['competitors'][1]['name']))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui relaxed divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.renderMatchesList());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    matches: Object.values(state.matches)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMatches\n})(MatchesList);","map":{"version":3,"sources":["C:\\Users\\Leqi\\Documents\\overwatch-fantasy-league\\frontend\\src\\components\\Predictions\\MatchesList.js"],"names":["React","connect","Link","fetchMatches","isPredicted","MatchesList","Component","buttonText","componentDidMount","props","renderAdmin","match","id","renderMatchesList","console","log","matches","map","render","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAEA,MAAMC,WAAW,GAAG,KAApB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AAAA;AAAA;;AAAA,SAMvCC,UANuC,GAM1B,MAAM;AACjB,aAAOH,WAAW,KAAK,IAAhB,GAAuB,iBAAvB,GAA2C,iBAAlD;AACD,KARsC;AAAA;;AAEvCI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWN,YAAX;AACD;;AAMDO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,WACE,oBAAC,IAAD;AAAM,MAAA,EAAE,6BAAsBA,KAAK,CAACC,EAA5B,CAAR;AAA0C,MAAA,SAAS,EAAC,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyE,KAAKL,UAAL,EAAzE,CADF;AAGD;;AACDM,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,OAAvB;AACA,WAAO,KAAKP,KAAL,CAAWO,OAAX,CAAmBC,GAAnB,CAAuBN,KAAK,IAAG;AACpC,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,WAAL,CAAiBC,KAAjB,CADH,EAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAAC,aAAD,CAAL,CAAqB,CAArB,EAAwB,MAAxB,CAAJ,CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAAC,aAAD,CAAL,CAAqB,CAArB,EAAwB,MAAxB,CAAJ,CADF,CAJF,CAFF,CADF;AAaD,KAdM,CAAP;AAeD;;AAEDO,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,iBAAL,EADH,CADF;AAKD;;AAxCsC;;AA4CzC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,OAAO,EAAEK,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACJ,OAApB;AADJ,GAAP;AAGD,CAJD;;AAKA,eAAef,OAAO,CAACkB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAAyCE,WAAzC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchMatches} from '../../actions';\r\n\r\nconst isPredicted = false;\r\n\r\nclass MatchesList extends React.Component{\r\n\r\n  componentDidMount(){\r\n    this.props.fetchMatches();\r\n  }\r\n\r\n  buttonText = () => {\r\n    return isPredicted === true ? 'Edit Prediction' : 'Make Prediction'\r\n  }\r\n\r\n  renderAdmin(match){\r\n    return (\r\n      <Link to={`/matches/predict/${match.id}`} className=\"ui button primary\">{this.buttonText()}</Link>\r\n    )\r\n  }\r\n  renderMatchesList(){\r\n    console.log(this.props.matches);\r\n    return this.props.matches.map(match =>{\r\n      return(\r\n        <div className=\"item\" key={match.id}>\r\n          {this.renderAdmin(match)}\r\n          <div className=\"content\">\r\n            <div className=\"item\">\r\n              <p>{match['competitors'][0]['name']}</p>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>{match['competitors'][1]['name']}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"ui relaxed divided list\">\r\n        {this.renderMatchesList()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    matches: Object.values(state.matches)\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {fetchMatches})(MatchesList);\r\n"]},"metadata":{},"sourceType":"module"}