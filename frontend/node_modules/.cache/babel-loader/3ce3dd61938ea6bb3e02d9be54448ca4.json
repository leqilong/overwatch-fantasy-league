{"ast":null,"code":"var _jsxFileName = \"/Users/leqilong/Desktop/projects/overwatch-fantasy-league/frontend/src/components/Predictions/PredictionForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { RadioButtonGroup, SelectField } from 'redux-form-material-ui';\nimport MenuItem from 'material-ui/MenuItem';\nimport { RadioButton } from 'material-ui/RadioButton';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nclass PredictionForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n\n    this.renderTeamLogo = index => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.matchData[\"competitors\"][index][\"icon\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.matchData[\"competitors\"][index][\"name\"])));\n    };\n\n    this.renderTeamValues = index => {\n      return this.props.matchData[\"competitors\"][index][\"name\"];\n    };\n\n    this.renderMatchScoreDropdown = (index, props) => {\n      return React.createElement(Field, {\n        name: \"matchScore\",\n        component: props => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(SelectField, Object.assign({\n          value: props.value,\n          floatingLabelText: this.renderTeamValues(index),\n          errorText: props.touched && props.error\n        }, props, {\n          onChange: (event, index, value) => props.value = event,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(MenuItem, {\n          value: \"0\",\n          primaryText: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(MenuItem, {\n          value: \"1\",\n          primaryText: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(MenuItem, {\n          value: \"2\",\n          primaryText: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(MenuItem, {\n          value: \"3\",\n          primaryText: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(MenuItem, {\n          value: \"4\",\n          primaryText: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n  }\n\n  getChildContext() {\n    return {\n      muiTheme: getMuiTheme()\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"seriesWinner\",\n      component: RadioButtonGroup,\n      label: \"Series Winner:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(RadioButton, {\n      value: this.renderTeamValues(0),\n      label: this.renderTeamLogo(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(RadioButton, {\n      value: this.renderTeamValues(1),\n      label: this.renderTeamLogo(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), this.renderMatchScoreDropdown(0, this.props), this.renderMatchScoreDropdown(1, this.props), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.seriesWinner) {\n    errors.seriesWinner = 'You must select a series winner';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'predictionForm',\n  validate\n})(PredictionForm);","map":{"version":3,"sources":["/Users/leqilong/Desktop/projects/overwatch-fantasy-league/frontend/src/components/Predictions/PredictionForm.js"],"names":["React","Field","reduxForm","RadioButtonGroup","SelectField","MenuItem","RadioButton","getMuiTheme","PredictionForm","Component","onSubmit","formValues","props","renderTeamLogo","index","matchData","renderTeamValues","renderMatchScoreDropdown","value","touched","error","event","getChildContext","muiTheme","render","handleSubmit","validate","errors","seriesWinner","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {RadioButtonGroup, SelectField} from 'redux-form-material-ui';\nimport MenuItem from 'material-ui/MenuItem';\nimport {RadioButton} from 'material-ui/RadioButton';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nclass PredictionForm extends React.Component{\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues);\n  };\n\n  childContextTypes:{\n    muiTheme: React.PropTypes.object.isRequired,\n  }\n\n  getChildContext() {\n    return {muiTheme: getMuiTheme()};\n  }\n\n  renderTeamLogo = index => {\n    return (\n      <div>\n        <img src={this.props.matchData[\"competitors\"][index][\"icon\"]} />\n        <div>\n          <p>{this.props.matchData[\"competitors\"][index][\"name\"]}</p>\n        </div>\n      </div>\n    )\n  }\n\n  renderTeamValues = index => {\n    return this.props.matchData[\"competitors\"][index][\"name\"];\n  }\n\n  renderMatchScoreDropdown = (index, props) => {\n    return(\n      <Field name=\"matchScore\" component={props =>\n        <div>\n          <SelectField\n            value={props.value}\n            floatingLabelText = {this.renderTeamValues(index)}\n            errorText = {props.touched && props.error}\n            {...props}\n            onChange = {(event, index, value) => props.value = event}\n          >\n            <MenuItem value=\"0\" primaryText=\"0\" />\n            <MenuItem value=\"1\" primaryText=\"1\" />\n            <MenuItem value=\"2\" primaryText=\"2\" />\n            <MenuItem value=\"3\" primaryText=\"3\" />\n            <MenuItem value=\"4\" primaryText=\"4\" />\n          </SelectField>\n        </div>\n      }/>\n    )\n  }\n\n  render(){\n    return(\n      <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <div>\n          <Field name=\"seriesWinner\" component={RadioButtonGroup} label=\"Series Winner:\">\n            <RadioButton value={this.renderTeamValues(0)} label={this.renderTeamLogo(0)} />\n            <RadioButton value={this.renderTeamValues(1)} label={this.renderTeamLogo(1)} />\n          </Field>\n        </div>\n          {this.renderMatchScoreDropdown(0, this.props)}\n          {this.renderMatchScoreDropdown(1, this.props)}\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    )\n  };\n};\n\n\nconst validate = (formValues)=>{\n  const errors = {};\n  if (!formValues.seriesWinner){\n    errors.seriesWinner = 'You must select a series winner';\n  }\n\n  return errors;\n\n}\n\nexport default reduxForm({\n  form: 'predictionForm',\n  validate\n})(PredictionForm);\n"]},"metadata":{},"sourceType":"module"}